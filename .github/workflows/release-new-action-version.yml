name: Release new action version
on:
  release:
    types: [released]
  workflow_dispatch:
    inputs:
      TAG_NAME:
        description: 'Tag name that the major tag will point to'
        required: true

env:
  TAG_NAME: ${{ github.event.inputs.TAG_NAME || github.event.release.tag_name }}
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
permissions:
  contents: write
  packages: write

jobs:
  update_tag:
    name: Update the major tag to include the ${{ github.event.inputs.TAG_NAME || github.event.release.tag_name }} changes
    environment:
      name: releaseNewActionVersion
    runs-on: ubuntu-latest
    outputs:
      major_tag: ${{ steps.update-major-tag.outputs.major-tag }}
    steps:
    - name: Update the ${{ env.TAG_NAME }} tag
      id: update-major-tag
      uses: actions/publish-action@v0.1.0
      with:
        source-tag: ${{ env.TAG_NAME }}
        slack-webhook: ${{ secrets.SLACK_WEBHOOK }}
  publish_image:
    needs: update_tag
    name: Publish the major version image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.update_tag.outputs.major_tag }}
      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.update_tag.outputs.major_tag }}
          labels: ${{ steps.meta.outputs.labels }}
